version: '3.8'
services:
  db:
    container_name: db
    image: postgres:14.0-alpine
    restart: always
    volumes:
    - db_value:/var/lib/postgresql/data/
    env_file:
    - ./.env

  backend:
    container_name: backend
    build:
      context: ../backend
      dockerfile: Dockerfile
    command: >
      sh -c "python /app/manage.py makemigrations &&
             python /app/manage.py migrate &&
             python /app/manage.py collectstatic --no-input &&
             gunicorn --bind 0.0.0.0:8000 --workers 3 foodgram.wsgi:application"
    restart: always
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
      - db
    env_file:
      - ./.env

  frontend:
    container_name: frontend
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/
    depends_on:
      - backend

  nginx:
    image: nginx:1.19.3
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    depends_on:
      - frontend

volumes:
      static_value:
      media_value:
      db_value:
